Thanks to this workshop I have gained a better understanding of memory allocation and the difference between aggregation and composition.The key difference between the two is that in an aggregation relationship the child class and exist by itself, while in a composition class, the child class cannot exist as a standalone object without the parent class. In the workshop, the Reservation class is a child of ConfirmationSender in an aggregation relationship. The header file of the ConfirmationSender has the line "const Reservation** m_reservationAddress;", which means the ConfirmationSender dynamically allocates memory for just the pointer to the address of the Reservation class objects. Thus, when updates are made to the Reservation objects themselves, the information displayed by the ConfirmationSender object will change accordingly. If the ConfirmationSender object was destroyed, the Reservation objects will be fine. On the other hand, Restaurant in a composition relationship with Reservation. There is the line "Reservation *m_reservations;" in the header file which means it dynamically allocates memory for the actual information of the Reservation objects. So when the Reservation objects themselves are changed or deleted, the Restaurant object does not get affected, however when the Restaurant gets deleted, the information inside it will be gone as well.